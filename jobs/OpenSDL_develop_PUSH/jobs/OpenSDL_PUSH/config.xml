<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.datadog.jenkins.plugins.datadog.DatadogJobProperty plugin="datadog@0.5.5">
      <emitOnCheckout>false</emitOnCheckout>
    </org.datadog.jenkins.plugins.datadog.DatadogJobProperty>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.25.0">
      <projectUrl>https://github.com/smartdevicelink/sdl_core.git/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@1.9.0">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.0.1">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/smartdevicelink/sdl_core</url>
        <credentialsId>282420ae-3807-4518-a1d0-a1ead552bbae</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>develop</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <assignedNode>atf_slave</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <com.cloudbees.jenkins.GitHubPushTrigger plugin="github@1.25.0">
      <spec></spec>
    </com.cloudbees.jenkins.GitHubPushTrigger>
    <hudson.triggers.SCMTrigger>
      <spec>H/5 * * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.plugins.cmake.CmakeBuilder plugin="cmakebuilder@2.4.4">
      <installationName>InSearchPath</installationName>
      <workingDir>build</workingDir>
      <toolArgs>-DBUILD_TESTS=ON -DENABLE_GCOV=ON  -DUSE_DISTCC=OFF -DUSE_COTIRE=OFF</toolArgs>
      <sourceDir>.</sourceDir>
      <buildType>Debug</buildType>
      <cleanBuild>true</cleanBuild>
      <toolSteps/>
    </hudson.plugins.cmake.CmakeBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
locale
sudo apt-get install -y gdb;
ulimit -c unlimited;
bash -e tools/infrastructure/check_style.sh
cd build
export THIRD_PARTY_INSTALL_PREFIX=${WORKSPACE}/build/src/3rdparty/LINUX
export THIRD_PARTY_INSTALL_PREFIX_ARCH=${THIRD_PARTY_INSTALL_PREFIX}/x86
export LD_LIBRARY_PATH=$THIRD_PARTY_INSTALL_PREFIX_ARCH/lib
make install
sudo ldconfig
mkdir /tmp/corefiles
sudo chmod -R 777 /tmp/corefiles
make test | tee ut.log || true; result=${PIPESTATUS[0]};
if [ $result -ne 0 ]; then
 COREFILE=$(find /tmp/corefiles -type f -name &quot;core*&quot;);
 echo $COREFILE;
 grep -w &quot;SegFault&quot; ut.log | while read -r line; do 
  arr=($line); 
  echo ${arr[3]};
 done &gt; res.txt;
 test_file=$(find ${WORKSPACE}/build/src/components/ -type f -name $(cat res.txt));
 echo $test_file;
 echo &quot;Started gdb!&quot;;
 echo thread apply all bt | gdb $test_file $COREFILE;
 exit 1;
fi
ls -l ${LD_LIBRARY_PATH}
ls -l ${THIRD_PARTY_INSTALL_PREFIX_ARCH}
ls -l ${THIRD_PARTY_INSTALL_PREFIX}
echo ${LD_LIBRARY_PATH}
echo ${THIRD_PARTY_INSTALL_PREFIX_ARCH}
echo ${THIRD_PARTY_INSTALL_PREFIX}
cp -r ${WORKSPACE}/build/src/3rdparty/LINUX/x86/lib/. ${WORKSPACE}/build/bin/
mkdir ${WORKSPACE}/build/bin/api
cp -r ${WORKSPACE}/src/components/interfaces/. ${WORKSPACE}/build/bin/api/
tar -zcvf OpenSDL.tar.gz bin/
curl -u admin:1qaz@WSX -X PUT &quot;http://172.30.23.4:8081/artifactory/OpenSDL/${BUILD_NUMBER}/OpenSDL.tar.gz&quot; -T OpenSDL.tar.gz</command>
    </hudson.tasks.Shell>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <condition class="org.jenkins_ci.plugins.run_condition.core.NeverRun" plugin="run-condition@1.0"/>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder" plugin="parameterized-trigger@2.32">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
                <properties>SDL_BUILD=${BUILD_NUMBER}</properties>
              </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            </configs>
            <projects>OpenSDL_develop_ATF</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.52">
      <recipientList>AKutsan@luxoft.com, AGovorov@luxoft.com, MGhiumiusliu@luxoft.com, IIKovalenko@luxoft.com, OVVasyliev@luxoft.com</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.FailureTrigger>
          <email>
            <recipientList>AKutsan@luxoft.com, AGovorov@luxoft.com, MGhiumiusliu@luxoft.com, IIKovalenko@luxoft.com, OVVasyliev@luxoft.com</recipientList>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>${SCRIPT, template=&quot;groovy-html.template&quot;}</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.DevelopersRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo>mailer@lc-jenkinsdockerhost.luxoft.com</replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.FailureTrigger>
      </configuredTriggers>
      <contentType>default</contentType>
      <defaultSubject>Latest commit - develop</defaultSubject>
      <defaultContent>${SCRIPT, template=&quot;groovy-html.template&quot;}</defaultContent>
      <attachmentsPattern></attachmentsPattern>
      <presendScript>$DEFAULT_PRESEND_SCRIPT</presendScript>
      <postsendScript>$DEFAULT_POSTSEND_SCRIPT</postsendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo>mailer@lc-jenkinsdockerhost.luxoft.com</replyTo>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.32">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.8.7"/>
    <EnvInjectBuildWrapper plugin="envinject@1.93.1">
      <info>
        <propertiesContent>LC_CTYPE=en_US.UTF-8
LC_ALL=en_US.UTF-8
CTEST_OUTPUT_ON_FAILURE=TRUE 
THIRD_PARTY_INSTALL_PREFIX=${WORKSPACE}/build/src/3rdparty/LINUX
THIRD_PARTY_INSTALL_PREFIX_ARCH=${THIRD_PARTY_INSTALL_PREFIX}/x86
LD_LIBRARY_PATH=$THIRD_PARTY_INSTALL_PREFIX_ARCH/lib</propertiesContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
    <jenkins.plugins.logstash.LogstashBuildWrapper plugin="logstash@1.2.0"/>
  </buildWrappers>
</project>