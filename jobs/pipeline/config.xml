<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.9">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.datadog.jenkins.plugins.datadog.DatadogJobProperty plugin="datadog@0.5.5">
      <emitOnCheckout>false</emitOnCheckout>
    </org.datadog.jenkins.plugins.datadog.DatadogJobProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@1.9.0">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers/>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.23">
    <script>stage &quot;INIT&quot;
parallel (
&quot;stream 1&quot; : { 
node(&apos;atf_slave&apos;) {
stage(&quot;FIRST&quot;) {
sh &apos;&apos;&apos;#!/bin/bash
git clone https://github.com/smartdevicelink/sdl_atf;
cd sdl_atf;
git checkout 752d9aec810ccb2a30ab6b53c587f8bb8ef1c545;
cd ..
cp -r ${WORKSPACE}/sdl_atf/. ${WORKSPACE}/;
pwd;
ls -l;
wget http://172.30.23.4:8081/artifactory/Utils/SDL_environment_setup.sh
sudo chmod +x SDL_environment_setup.sh
sudo chmod 777 SDL_environment_setup.sh
sudo chmod -R 777 ${WORKSPACE};
export QMAKE=/opt/qt53/bin/qmake;
git submodule init;
git submodule update;
export QMAKE=/opt/qt53/bin/qmake;
make;

export SDL_BUILD=72;
export POLICY=HTTP;
export PULL_ID=0;
sudo chmod -R 777 ${WORKSPACE};

echo &quot;Script started&quot;

seconds2time ()
{
   T=$1
   D=$((T/60/60/24))
   H=$((T/60/60%24))
   M=$((T/60%60))
   S=$((T%60))

   if [[ ${D} != 0 ]]
   then
      printf \&apos;%d days %02d:%02d:%02d\&apos; $D $H $M $S
   else
      printf \&apos;%02d:%02d:%02d\&apos; $H $M $S
   fi
}

mkdir aut
cd aut
TEST_SET=&quot;policies_happy_paths.txt&quot;
if [ &quot;$POLICY&quot; == &quot;BASE&quot; ]; then
	wget http://172.30.23.4:8081/artifactory/OpenSDL/${SDL_BUILD}/OpenSDL.tar.gz
else
	wget http://172.30.23.4:8081/artifactory/OpenSDL_${POLICY}_Nightly/${SDL_BUILD}/OpenSDL.tar.gz
fi
if [ &quot;$POLICY&quot; == &quot;HTTP&quot; ]; then
	TEST_SET=&quot;policies_happy_paths_HTTP.txt&quot;
fi
if [ &quot;$POLICY&quot; == &quot;EXTENDED&quot; ]; then
	TEST_SET=&quot;policies_happy_paths_EXTERNAL_PROPRIETARY.txt&quot;
fi
if [ &quot;$POLICY&quot; == &quot;PROPRIETARY&quot; ]; then
	TEST_SET=&quot;policies_happy_paths_PROPRIETARY.txt&quot;
fi

tar -xvf OpenSDL.tar.gz
cd bin
pwd
export LD_LIBRARY_PATH=.
sudo ldconfig
cd ../..
ls -l
git clone https://github.com/smartdevicelink/sdl_atf_test_scripts.git
cd sdl_atf_test_scripts
git checkout feature/external_proprietary_policy
cd ..
ls -l
cp -r ${WORKSPACE}/sdl_atf_test_scripts/. ${WORKSPACE}/
pwd
ls -l ${WORKSPACE}
ls -l data/
cp -rf ${WORKSPACE}/aut/bin/api/. ${WORKSPACE}/data/
ls -l data/
echo ${POLICY}

#mkdir tmp

#cp ./test_scripts/Polices/Policies_Security/002_ATF_P_Policies_Performance_Requirement.lua tmp/002_ATF_P_Policies_Performance_Requirement.lua
#cp ./test_scripts/Polices/build_options/ATF_PM_change_status_UPDATE_NEEDED_after_timeout_expired.lua tmp/ATF_PM_change_status_UPDATE_NEEDED_after_timeout_expired.lua
#cp ./test_scripts/Polices/build_options/011_ATF_P_TC_PTS_Define_URL_to_send_PTS_HTTP.lua tmp/011_ATF_P_TC_PTS_Define_URL_to_send_PTS_HTTP.lua

echo &quot;Backup SDL&quot;
#Backup
./SDL_environment_setup.sh -b ${WORKSPACE}/aut/bin
echo &quot;&lt;html&gt;&lt;head&gt;&lt;title&gt;ATF Nightly ${POLICY} Report - Build#${BUILD_NUMBER}&lt;/title&gt;&lt;/head&gt;&quot; &gt;&gt; atf_report.html

echo &quot;&lt;script src=\&apos;https://code.jquery.com/jquery-3.1.1.min.js\&apos; integrity=\&apos;sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=\&apos; crossorigin=\&apos;anonymous\&apos;&gt;&lt;/script&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;script src=\&apos;https://code.jquery.com/ui/1.12.0/jquery-ui.min.js\&apos; integrity=\&apos;sha256-eGE6blurk5sHj+rmkfsGYeKyZx3M4bG+ZlFyA7Kns7E=\&apos; crossorigin=\&apos;anonymous\&apos;&gt;&lt;/script&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;link href=\&apos;https://cdn.datatables.net/1.10.13/css/jquery.dataTables.min.css\&apos; rel=\&apos;stylesheet\&apos;&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;link href=\&apos;https://cdn.datatables.net/buttons/1.2.4/css/buttons.dataTables.min.css\&apos; rel=\&apos;stylesheet\&apos;&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;link href=\&apos;https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0-alpha.5/css/bootstrap.css\&apos; rel=\&apos;stylesheet\&apos;&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;script src=\&apos;https://cdn.datatables.net/1.10.13/js/jquery.dataTables.min.js\&apos;&gt;&lt;/script&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;script src=\&apos;https://cdn.datatables.net/buttons/1.2.4/js/dataTables.buttons.min.js\&apos;&gt;&lt;/script&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;script src=\&apos;https://cdnjs.cloudflare.com/ajax/libs/jszip/2.5.0/jszip.min.js\&apos;&gt;&lt;/script&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;script src=\&apos;https://cdn.rawgit.com/bpampuch/pdfmake/0.1.18/build/pdfmake.min.js\&apos;&gt;&lt;/script&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;script src=\&apos;https://cdn.rawgit.com/bpampuch/pdfmake/0.1.18/build/vfs_fonts.js\&apos;&gt;&lt;/script&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;script src=\&apos;https://cdn.datatables.net/buttons/1.2.4/js/buttons.html5.min.js\&apos;&gt;&lt;/script&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;script src=\&apos;https://cdn.datatables.net/1.10.13/js/dataTables.bootstrap4.min.js\&apos;&gt;&lt;/script&gt;&quot; &gt;&gt; atf_report.html


echo &quot;&lt;script&gt; \\$(document).ready(function() {\\$(\&apos;#example\&apos;).DataTable({paging: false, bSortClasses : false, dom: \&apos;Bfrtip\&apos;, buttons: [\&apos;copyHtml5\&apos;, \&apos;excelHtml5\&apos;, \&apos;csvHtml5\&apos;, \&apos;pdfHtml5\&apos;]});} );&lt;/script&gt;&quot; &gt;&gt; atf_report.html

echo &quot;&lt;h3&gt;&lt;a href=\&apos;${BUILD_URL}\&apos;&gt;${JOB_NAME}&lt;/a&gt;&lt;/h3&gt;&lt;br&gt;&quot; &gt;&gt; atf_report.html
echo &quot;Detailed regression report - &lt;a href=\&apos;${BUILD_URL}/testReport/(root)/lua/\&apos;&gt;Tests Run Details&lt;/a&gt;&lt;br&gt;&lt;br&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;table border=\&apos;1\&apos; id=&quot;example&quot; class=\&apos;table table-striped table-bordered display compact stripe hover\&apos; cellspacing=&quot;0&quot; width=&quot;100%&quot;&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Test name&lt;/th&gt;&lt;th&gt;Test Result&lt;/th&gt;&lt;th&gt;Execution time.&lt;/th&gt;&lt;th&gt;Jira Issue&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;testsuites&gt;&quot; &gt;&gt; junit.xml
total_time=0;
pased_tests=0;
failed_tests=0;
echo &quot;&lt;testsuite name=\&apos;ALL TESTS_${POLICY}\&apos;&gt;&quot; &gt;&gt; junit.xml
#for i in $(find ./tmp/ -type f -name &quot;*.lua&quot;);
echo &quot;$(cat ./test_sets/$TEST_SET)&quot; 
pwd
ls -l
ls -l data/
ls -l aut/bin/
while read -r i
do
 echo &quot;Jira = &quot; $i | awk \&apos;{print $2}\&apos;;
 test_script=$(echo $i | awk \&apos;{print $1}\&apos;)
 echo &quot;Script = &quot;$test_script
 start=$SECONDS;
 ps -aux | grep smartDeviceLinkCore | awk \&apos;{print $2}\&apos; | xargs kill -9;
 pwd
 ./start.sh --sdl-core=aut/bin $test_script | tee console.log ; result=${PIPESTATUS[0]};
 if [ $result -eq 0 ]; then
  	stop=$SECONDS;
 	(( runtime=stop-start ));
 	(( total_time=total_time+runtime ));
	(( pased_tests=pased_tests+1 ))
 	echo &quot;Test passed&quot;;
    echo &quot;&lt;tr&gt; &lt;td&gt;$test_script&lt;/td&gt;&lt;td bgcolor=\&apos;green\&apos;&gt;Passed&lt;/td&gt;&lt;td&gt;$runtime&lt;/td&gt;&lt;td&gt;&lt;a href=\&apos;https://adc.luxoft.com/jira/browse/$(echo $i | awk \&apos;{print $2}\&apos;)\&apos;&gt;$(echo $i | awk \&apos;{print $2}\&apos;)&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&quot; &gt;&gt; atf_report.html;
    echo &quot;&lt;testcase name=\&apos;$(basename $test_script .lua)\&apos; classname=\&apos;lua\&apos; time=\&apos;$runtime\&apos; /&gt;&quot; &gt;&gt; junit.xml;
 fi
 if [ $result -ne 0 ]; then
 	stop=$SECONDS;
 	(( runtime=stop-start ));
 	(( total_time=total_time+runtime ));
	(( failed_tests=failed_tests+1 ))
 	echo &quot;&lt;tr&gt; &lt;td&gt;$test_script&lt;/td&gt;&lt;td bgcolor=\&apos;red\&apos;&gt;Failed&lt;/td&gt;&lt;td&gt;$runtime&lt;/td&gt;&lt;td&gt;&lt;a href=\&apos;https://adc.luxoft.com/jira/browse/$(echo $i | awk \&apos;{print $2}\&apos;)\&apos;&gt;$(echo $i | awk \&apos;{print $2}\&apos;)&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&quot; &gt;&gt; atf_report.html;
    echo &quot;&lt;testcase name=\&apos;$(basename $test_script .lua)\&apos; classname=\&apos;lua\&apos; time=\&apos;$runtime\&apos;&gt;&quot; &gt;&gt; junit.xml;
   	echo &quot;&lt;failure message=\&apos;Something goes wrong\&apos;&gt;Test exited with exit code = $result&lt;/failure&gt;&quot; &gt;&gt; junit.xml;
    echo &quot;&lt;/testcase&gt;&quot; &gt;&gt; junit.xml
    echo &quot;Test failed with exit code = $result!&quot;;
	echo &quot;$(basename $test_script .lua)&quot; &gt;&gt; failed_tests.txt;
    failed=1;
 fi
 echo &quot;Test finished!&quot;;

 cp ErrorLog.txt ErrorLog-$(basename $test_script .lua).txt
 cp aut/bin/SmartDeviceLinkCore.log ${WORKSPACE}/SDL_Log_$(basename $test_script .lua).txt
 rm -rf aut/bin/smartDeviceLinkCore.log
 ps -aux | grep smartDeviceLinkCore | awk \&apos;{print $2}\&apos; | xargs kill -9;
 echo &quot;Clean SDL&quot;
 #Clean
 ./SDL_environment_setup.sh -c ${WORKSPACE}/aut/bin
 echo &quot;Restore SDL&quot;
 #Restore
 ./SDL_environment_setup.sh -r ${WORKSPACE}/aut/bin
done &lt; ./test_sets/$TEST_SET
echo &quot;&lt;/table&gt;&lt;/br&gt;Total time: $(seconds2time $total_time)&quot; &gt;&gt; atf_report.html
echo &quot;Passed=${pased_tests}, Failed=${failed_tests}&lt;/html&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;/testsuite&gt;&quot; &gt;&gt; junit.xml
echo &quot;&lt;/testsuites&gt;&quot; &gt;&gt; junit.xml

tar -zcvf SDL_Logs.tar.gz ${WORKSPACE}/SDL_Log_*.txt
tar -zcvf TestingReports.tar.gz TestingReports/
tar -zcvf ErrorLogs.tar.gz ErrorLog-*.txt

echo &quot;Script ended&quot;
echo &quot;{ATF_PASSED:${pased_tests} }&quot;
echo &quot;{ATF_FAILED:${failed_tests} }&quot;
echo &quot;{ATF_TOTAL:$(( pased_tests+failed_tests )) }&quot;

wget -O old_failed_tests.txt ${JOB_URL}lastCompletedBuild/artifact/failed_tests.txt

awk \&apos;{if (f==1) { r[$0] } else if (! ($0 in r)) { print $0 } } \&apos; f=1 old_failed_tests.txt f=2 failed_tests.txt &gt;&gt; new_failures.txt

NUMOFLINES=$(cat new_failures.txt | wc -l )

cp new_failures.txt new_failures($NUMOFLINES).txt

if [ $failed -ne 0 ]; then
  if [ ${PULL_ID} -ne 0 ]; then
	curl -H &quot;Content-type: application/json&quot; -X POST -u JenkinsSDLOnCloud:1qaz@WSX -d &quot;{\\&quot;body\\&quot;: \\&quot;ATF failed(Passed=${pased_tests}, Failed=${failed_tests}) ${BUILD_URL}\\&quot;, \\&quot;in_reply_to\\&quot;: 0}&quot; https://api.github.comepos/smartdevicelink/sdl_core/issues/${PULL_ID}/comments
  fi
 exit 1
fi&apos;&apos;&apos;
}
}
},
&quot;stream 2&quot; : { 
node(&apos;atf_slave2&apos;) {
stage(&quot;SECOND&quot;) {
sh &apos;&apos;&apos;#!/bin/bash
wget http://172.30.23.4:8081/artifactory/Utils/SDL_environment_setup.sh
sudo chmod +x SDL_environment_setup.sh
sudo chmod 777 SDL_environment_setup.sh

git clone https://github.com/smartdevicelink/sdl_atf;
pwd;
ls -l;
sudo chmod -R 777 ${WORKSPACE};
export QMAKE=/opt/qt53/bin/qmake;
cd ${WORKSPACE}/sdl_atf;
git submodule init;
git submodule update;
export QMAKE=/opt/qt53/bin/qmake;
make;

export SDL_BUILD=72;
export POLICY=HTTP;
export PULL_ID=0;
sudo chmod -R 777 ${WORKSPACE};

echo &quot;Script started&quot;

seconds2time ()
{
   T=$1
   D=$((T/60/60/24))
   H=$((T/60/60%24))
   M=$((T/60%60))
   S=$((T%60))

   if [[ ${D} != 0 ]]
   then
      printf \&apos;%d days %02d:%02d:%02d\&apos; $D $H $M $S
   else
      printf \&apos;%02d:%02d:%02d\&apos; $H $M $S
   fi
}

mkdir aut
cd aut
TEST_SET=&quot;policies_happy_paths.txt&quot;
if [ &quot;$POLICY&quot; == &quot;BASE&quot; ]; then
	wget http://172.30.23.4:8081/artifactory/OpenSDL/${SDL_BUILD}/OpenSDL.tar.gz
else
	wget http://172.30.23.4:8081/artifactory/OpenSDL_${POLICY}_Nightly/${SDL_BUILD}/OpenSDL.tar.gz
fi
if [ &quot;$POLICY&quot; == &quot;HTTP&quot; ]; then
	TEST_SET=&quot;policies_happy_paths_HTTP.txt&quot;
fi
if [ &quot;$POLICY&quot; == &quot;EXTENDED&quot; ]; then
	TEST_SET=&quot;policies_happy_paths_EXTERNAL_PROPRIETARY.txt&quot;
fi
if [ &quot;$POLICY&quot; == &quot;PROPRIETARY&quot; ]; then
	TEST_SET=&quot;policies_happy_paths_PROPRIETARY.txt&quot;
fi

tar -xvf OpenSDL.tar.gz
cd bin
pwd
export LD_LIBRARY_PATH=.
sudo ldconfig
cd ../..
ls -l
git clone https://github.com/smartdevicelink/sdl_atf_test_scripts.git
cd sdl_atf_test_scripts
git checkout feature/external_proprietary_policy
cd ..
ls -l
cp -r ${WORKSPACE}/sdl_atf/sdl_atf_test_scripts/. ${WORKSPACE}/sdl_atf/
pwd
cp -rf ${WORKSPACE}/sdla_atf/aut/bin/api/. ${WORKSPACE}/sdl_atf/data/
ls -l data/
echo ${POLICY}

#mkdir tmp

#cp ./test_scripts/Polices/Policies_Security/002_ATF_P_Policies_Performance_Requirement.lua tmp/002_ATF_P_Policies_Performance_Requirement.lua
#cp ./test_scripts/Polices/build_options/ATF_PM_change_status_UPDATE_NEEDED_after_timeout_expired.lua tmp/ATF_PM_change_status_UPDATE_NEEDED_after_timeout_expired.lua
#cp ./test_scripts/Polices/build_options/011_ATF_P_TC_PTS_Define_URL_to_send_PTS_HTTP.lua tmp/011_ATF_P_TC_PTS_Define_URL_to_send_PTS_HTTP.lua

echo &quot;Backup SDL&quot;
#Backup
./SDL_environment_setup.sh -b ${WORKSPACE}/sdl_atf/aut/bin
echo &quot;&lt;html&gt;&lt;head&gt;&lt;title&gt;ATF Nightly ${POLICY} Report - Build#${BUILD_NUMBER}&lt;/title&gt;&lt;/head&gt;&quot; &gt;&gt; atf_report.html

echo &quot;&lt;script src=\&apos;https://code.jquery.com/jquery-3.1.1.min.js\&apos; integrity=\&apos;sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=\&apos; crossorigin=\&apos;anonymous\&apos;&gt;&lt;/script&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;script src=\&apos;https://code.jquery.com/ui/1.12.0/jquery-ui.min.js\&apos; integrity=\&apos;sha256-eGE6blurk5sHj+rmkfsGYeKyZx3M4bG+ZlFyA7Kns7E=\&apos; crossorigin=\&apos;anonymous\&apos;&gt;&lt;/script&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;link href=\&apos;https://cdn.datatables.net/1.10.13/css/jquery.dataTables.min.css\&apos; rel=\&apos;stylesheet\&apos;&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;link href=\&apos;https://cdn.datatables.net/buttons/1.2.4/css/buttons.dataTables.min.css\&apos; rel=\&apos;stylesheet\&apos;&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;link href=\&apos;https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0-alpha.5/css/bootstrap.css\&apos; rel=\&apos;stylesheet\&apos;&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;script src=\&apos;https://cdn.datatables.net/1.10.13/js/jquery.dataTables.min.js\&apos;&gt;&lt;/script&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;script src=\&apos;https://cdn.datatables.net/buttons/1.2.4/js/dataTables.buttons.min.js\&apos;&gt;&lt;/script&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;script src=\&apos;https://cdnjs.cloudflare.com/ajax/libs/jszip/2.5.0/jszip.min.js\&apos;&gt;&lt;/script&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;script src=\&apos;https://cdn.rawgit.com/bpampuch/pdfmake/0.1.18/build/pdfmake.min.js\&apos;&gt;&lt;/script&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;script src=\&apos;https://cdn.rawgit.com/bpampuch/pdfmake/0.1.18/build/vfs_fonts.js\&apos;&gt;&lt;/script&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;script src=\&apos;https://cdn.datatables.net/buttons/1.2.4/js/buttons.html5.min.js\&apos;&gt;&lt;/script&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;script src=\&apos;https://cdn.datatables.net/1.10.13/js/dataTables.bootstrap4.min.js\&apos;&gt;&lt;/script&gt;&quot; &gt;&gt; atf_report.html


echo &quot;&lt;script&gt; \\$(document).ready(function() {\\$(\&apos;#example\&apos;).DataTable({paging: false, bSortClasses : false, dom: \&apos;Bfrtip\&apos;, buttons: [\&apos;copyHtml5\&apos;, \&apos;excelHtml5\&apos;, \&apos;csvHtml5\&apos;, \&apos;pdfHtml5\&apos;]});} );&lt;/script&gt;&quot; &gt;&gt; atf_report.html

echo &quot;&lt;h3&gt;&lt;a href=\&apos;${BUILD_URL}\&apos;&gt;${JOB_NAME}&lt;/a&gt;&lt;/h3&gt;&lt;br&gt;&quot; &gt;&gt; atf_report.html
echo &quot;Detailed regression report - &lt;a href=\&apos;${BUILD_URL}/testReport/(root)/lua/\&apos;&gt;Tests Run Details&lt;/a&gt;&lt;br&gt;&lt;br&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;table border=\&apos;1\&apos; id=&quot;example&quot; class=\&apos;table table-striped table-bordered display compact stripe hover\&apos; cellspacing=&quot;0&quot; width=&quot;100%&quot;&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Test name&lt;/th&gt;&lt;th&gt;Test Result&lt;/th&gt;&lt;th&gt;Execution time.&lt;/th&gt;&lt;th&gt;Jira Issue&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;testsuites&gt;&quot; &gt;&gt; junit.xml
total_time=0;
pased_tests=0;
failed_tests=0;
echo &quot;&lt;testsuite name=\&apos;ALL TESTS_${POLICY}\&apos;&gt;&quot; &gt;&gt; junit.xml
#for i in $(find ./tmp/ -type f -name &quot;*.lua&quot;);
echo &quot;$(cat ./test_sets/$TEST_SET)&quot; 
while read -r i
do
 echo &quot;Jira = &quot; $i | awk \&apos;{print $2}\&apos;;
 test_script=$(echo $i | awk \&apos;{print $1}\&apos;)
 echo &quot;Script = &quot;$test_script
 start=$SECONDS;
 ps -aux | grep smartDeviceLinkCore | awk \&apos;{print $2}\&apos; | xargs kill -9;
 ./start.sh --sdl-core=aut/bin $test_script | tee console.log ; result=${PIPESTATUS[0]};
 if [ $result -eq 0 ]; then
  	stop=$SECONDS;
 	(( runtime=stop-start ));
 	(( total_time=total_time+runtime ));
	(( pased_tests=pased_tests+1 ))
 	echo &quot;Test passed&quot;;
    echo &quot;&lt;tr&gt; &lt;td&gt;$test_script&lt;/td&gt;&lt;td bgcolor=\&apos;green\&apos;&gt;Passed&lt;/td&gt;&lt;td&gt;$runtime&lt;/td&gt;&lt;td&gt;&lt;a href=\&apos;https://adc.luxoft.com/jira/browse/$(echo $i | awk \&apos;{print $2}\&apos;)\&apos;&gt;$(echo $i | awk \&apos;{print $2}\&apos;)&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&quot; &gt;&gt; atf_report.html;
    echo &quot;&lt;testcase name=\&apos;$(basename $test_script .lua)\&apos; classname=\&apos;lua\&apos; time=\&apos;$runtime\&apos; /&gt;&quot; &gt;&gt; junit.xml;
 fi
 if [ $result -ne 0 ]; then
 	stop=$SECONDS;
 	(( runtime=stop-start ));
 	(( total_time=total_time+runtime ));
	(( failed_tests=failed_tests+1 ))
 	echo &quot;&lt;tr&gt; &lt;td&gt;$test_script&lt;/td&gt;&lt;td bgcolor=\&apos;red\&apos;&gt;Failed&lt;/td&gt;&lt;td&gt;$runtime&lt;/td&gt;&lt;td&gt;&lt;a href=\&apos;https://adc.luxoft.com/jira/browse/$(echo $i | awk \&apos;{print $2}\&apos;)\&apos;&gt;$(echo $i | awk \&apos;{print $2}\&apos;)&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&quot; &gt;&gt; atf_report.html;
    echo &quot;&lt;testcase name=\&apos;$(basename $test_script .lua)\&apos; classname=\&apos;lua\&apos; time=\&apos;$runtime\&apos;&gt;&quot; &gt;&gt; junit.xml;
   	echo &quot;&lt;failure message=\&apos;Something goes wrong\&apos;&gt;Test exited with exit code = $result&lt;/failure&gt;&quot; &gt;&gt; junit.xml;
    echo &quot;&lt;/testcase&gt;&quot; &gt;&gt; junit.xml
    echo &quot;Test failed with exit code = $result!&quot;;
	echo &quot;$(basename $test_script .lua)&quot; &gt;&gt; failed_tests.txt;
    failed=1;
 fi
 echo &quot;Test finished!&quot;;

 cp ErrorLog.txt ErrorLog-$(basename $test_script .lua).txt
 cp aut/bin/SmartDeviceLinkCore.log ${WORKSPACE}/SDL_Log_$(basename $test_script .lua).txt
 rm -rf aut/bin/smartDeviceLinkCore.log
 ps -aux | grep smartDeviceLinkCore | awk \&apos;{print $2}\&apos; | xargs kill -9;
 echo &quot;Clean SDL&quot;
 #Clean
 ./SDL_environment_setup.sh -c ${WORKSPACE}/aut/bin
 echo &quot;Restore SDL&quot;
 #Restore
 ./SDL_environment_setup.sh -r ${WORKSPACE}/aut/bin
done &lt; ./test_sets/$TEST_SET
echo &quot;&lt;/table&gt;&lt;/br&gt;Total time: $(seconds2time $total_time)&quot; &gt;&gt; atf_report.html
echo &quot;Passed=${pased_tests}, Failed=${failed_tests}&lt;/html&gt;&quot; &gt;&gt; atf_report.html
echo &quot;&lt;/testsuite&gt;&quot; &gt;&gt; junit.xml
echo &quot;&lt;/testsuites&gt;&quot; &gt;&gt; junit.xml

tar -zcvf SDL_Logs.tar.gz ${WORKSPACE}/SDL_Log_*.txt
tar -zcvf TestingReports.tar.gz TestingReports/
tar -zcvf ErrorLogs.tar.gz ErrorLog-*.txt

echo &quot;Script ended&quot;
echo &quot;{ATF_PASSED:${pased_tests} }&quot;
echo &quot;{ATF_FAILED:${failed_tests} }&quot;
echo &quot;{ATF_TOTAL:$(( pased_tests+failed_tests )) }&quot;

wget -O old_failed_tests.txt ${JOB_URL}lastCompletedBuild/artifact/failed_tests.txt

awk \&apos;{if (f==1) { r[$0] } else if (! ($0 in r)) { print $0 } } \&apos; f=1 old_failed_tests.txt f=2 failed_tests.txt &gt;&gt; new_failures.txt

NUMOFLINES=$(cat new_failures.txt | wc -l )

cp new_failures.txt new_failures($NUMOFLINES).txt

if [ $failed -ne 0 ]; then
  if [ ${PULL_ID} -ne 0 ]; then
	curl -H &quot;Content-type: application/json&quot; -X POST -u JenkinsSDLOnCloud:1qaz@WSX -d &quot;{\\&quot;body\\&quot;: \\&quot;ATF failed(Passed=${pased_tests}, Failed=${failed_tests}) ${BUILD_URL}\\&quot;, \\&quot;in_reply_to\\&quot;: 0}&quot; https://api.github.comepos/smartdevicelink/sdl_core/issues/${PULL_ID}/comments
  fi
 exit 1
fi&apos;&apos;&apos;
}
}
}
)</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
</flow-definition>