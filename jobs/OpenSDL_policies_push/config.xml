<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.23.1">
      <projectUrl>https://github.com/smartdevicelink/sdl_core.git/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.0.1">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>https://github.com/smartdevicelink/sdl_core</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>feature/support_extended_propriatary_policy</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <browser class="hudson.plugins.git.browser.GithubWeb">
      <url>https://github.com/smartdevicelink/sdl_core.git</url>
    </browser>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <com.cloudbees.jenkins.GitHubPushTrigger plugin="github@1.23.1">
      <spec></spec>
    </com.cloudbees.jenkins.GitHubPushTrigger>
    <hudson.triggers.SCMTrigger>
      <spec>H/5 * * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.plugins.cmake.CmakeBuilder plugin="cmakebuilder@2.4.4">
      <installationName>InSearchPath</installationName>
      <workingDir>build</workingDir>
      <toolArgs>-DBUILD_TESTS=ON -DENABLE_GCOV=OFF</toolArgs>
      <sourceDir>.</sourceDir>
      <buildType>Debug</buildType>
      <cleanBuild>true</cleanBuild>
      <toolSteps/>
    </hudson.plugins.cmake.CmakeBuilder>
    <hudson.tasks.Shell>
      <command>bash -e tools/infrastructure/check_style.sh
cd build
export LD_LIBRARY_PATH=.
make install
sudo ldconfig
make test
bash -ex ../tools/infrastructure/collect_coverage.sh ./
sudo cp /usr/local/lib/liblog4cxx.so.10.0.0 build/bin
sudo cp /usr/local/include/log4cxx/log4cxx.h  build/bin
sudo cp /usr/local/include/log4cxx/private/log4cxx_private.h  build/bin
tar -zcvf OpenSDL.tar.gz /bin</command>
    </hudson.tasks.Shell>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <condition class="org.jenkins_ci.plugins.run_condition.core.StatusCondition" plugin="run-condition@1.0">
        <worstResult>
          <name>SUCCESS</name>
          <ordinal>0</ordinal>
          <color>BLUE</color>
          <completeBuild>true</completeBuild>
        </worstResult>
        <bestResult>
          <name>SUCCESS</name>
          <ordinal>0</ordinal>
          <color>BLUE</color>
          <completeBuild>true</completeBuild>
        </bestResult>
      </condition>
      <buildStep class="hudson.plugins.parameterizedtrigger.TriggerBuilder" plugin="parameterized-trigger@2.32">
        <configs>
          <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            <configs>
              <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
                <properties>SDL_BUILD=${BUILD_NUMBER}</properties>
              </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            </configs>
            <projects>ATF_AUTO_START_policies</projects>
            <condition>ALWAYS</condition>
            <triggerWithNoParameters>false</triggerWithNoParameters>
            <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
          </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
        </configs>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.32">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.8.7"/>
    <org.jfrog.hudson.generic.ArtifactoryGenericConfigurator plugin="artifactory@2.8.1">
      <details>
        <artifactoryName>art</artifactoryName>
        <artifactoryUrl>http://172.30.23.4:8081/artifactory</artifactoryUrl>
        <stagingPlugin/>
      </details>
      <resolverDetails>
        <artifactoryName>art</artifactoryName>
        <artifactoryUrl>http://172.30.23.4:8081/artifactory</artifactoryUrl>
        <stagingPlugin/>
      </resolverDetails>
      <deployerCredentialsConfig>
        <credentials>
          <username></username>
          <password></password>
        </credentials>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </deployerCredentialsConfig>
      <resolverCredentialsConfig>
        <credentials>
          <username></username>
          <password></password>
        </credentials>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </resolverCredentialsConfig>
      <useSpecs>true</useSpecs>
      <uploadSpec>
        <spec>{
&quot;files&quot;: 
[
  {
      &quot;pattern&quot;: &quot;bin/OpenSDL.tar.gz&quot;,
      &quot;target&quot;: &quot;OpenSDL/policies/${BUILD_NUMBER}/&quot;
    }
]
}</spec>
      </uploadSpec>
      <downloadSpec>
        <spec></spec>
      </downloadSpec>
      <deployPattern></deployPattern>
      <resolvePattern></resolvePattern>
      <matrixParams></matrixParams>
      <deployBuildInfo>true</deployBuildInfo>
      <includeEnvVars>false</includeEnvVars>
      <envVarsPatterns>
        <includePatterns></includePatterns>
        <excludePatterns>*password*,*secret*,*key*</excludePatterns>
      </envVarsPatterns>
      <discardOldBuilds>false</discardOldBuilds>
      <discardBuildArtifacts>true</discardBuildArtifacts>
      <multiConfProject>false</multiConfProject>
    </org.jfrog.hudson.generic.ArtifactoryGenericConfigurator>
    <EnvInjectBuildWrapper plugin="envinject@1.93.1">
      <info>
        <propertiesContent>LC_CTYPE=en_US.UTF-8 
CTEST_OUTPUT_ON_FAILURE=TRUE </propertiesContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
    <jenkins.plugins.logstash.LogstashBuildWrapper plugin="logstash@1.2.0"/>
  </buildWrappers>
</project>